openapi: 3.0.3
info:
  title: Flask User API
  description: " "
  version: 1.0.0
servers:
  - url: /api
    description: Local server for MediCare-Rx

components:
  schemas:
    stock:
      type: "object"
      required:
        - medicine_name
        - medicine_quantity
        - price_stuck
        - description
      properties:
        medicine_id:
          type: "string"
        medicine_name:
          type: "string"
        medicine_quantity:
          type: "integer"
        price_stuck:
          type: "integer"
        description:
          type: "string"
    staff:
      type: "object"
      properties:
        full_name:
          type: "string"
        username:
          type: "string"
        password:
          type: "string"
        employee_type:
          type: "string"
        email:
          type: "string"
        phone:
          type: "string"
  parameters:
    staff_id:
      name: "employee_id"
      description: "Unique identifier for staff"
      in: path
      required: true
      schema:
        type: "integer"
    medicine_id:
      name: "medicine_id"
      description: "Unique identifier for med"
      in: path
      required: true
      schema:
        type: "integer"

paths: 
  /stock:
    get:
      operationId: "stock_functions.read_all"
      tags:
        - Stock
      summary: "Stock available"
      responses:
        "200":
          description: "Succesfully read stock available"
  /stock/add:
    post:
      operationId: "stock_functions.add"
      tags:
        - Stock
      summary: "Add a medicine"
      requestBody:
        description: "Stock to add"
        required: true
        content:
          application/json:
            schema:
              x-body-name: "stock"
              $ref: "#components/schemas/stock"
      responses: 
        "201":
          description: "Succesfully added medicine"
  /stock/remove/{medicine_id}:
    delete:
      operationId: "stock_functions.remove"
      tags:
        - Stock
      summary: "Delete stock"
      parameters:
        - $ref: "#components/parameters/medicine_id"
      responses:
          "204":
            description: "Succesfully deleted stock"
    
  /stock/update/{medicine_id}:
    put:
      operationId: "stock_functions.update"
      tags:
        - Stock
      summary: "Update stock"
      parameters:
        - $ref: "#components/parameters/medicine_id"
      responses:
        "200":
          description: "Succsefully update medicine"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "stock"
              $ref: "#/components/schemas/stock"

  /admin/staff:
    get:
      operationId: "admin_functions.read_all"
      tags:
        - "Staff"
      summary: "Read the list of employees"
      responses:
        "200":
          description: "Successfully read employees list"
  /admin/staff/add:
    post:
      operationId: "admin_functions.add"
      tags:
        - "Staff"
      summary: "Add an employee"
      requestBody:
        description: "Employee details"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "staff"
              $ref: "#/components/schemas/staff"
      responses:
        "201":
          description: "Successfully added employee"
  /admin/staff/{employee_id}:
    get:
      operationId: "admin_functions.read_one"
      tags:
        - Staff
      summary: "Read one employee"
      parameters:
        - $ref: "#/components/parameters/staff_id"
      responses:
        "200":
          description: "Successfully read employee"
        "404":
          description: "Not found"
          
  /admin/staff/update/{employee_id}:
    put:
      operationId: "admin_functions.update"
      tags:
        - Staff
      summary: "Update employee details"
      parameters:
        - $ref: "#/components/parameters/staff_id"
      responses:
        "200":
          description: "Successfully updated employee"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "employee"
              $ref: "#/components/schemas/staff"
  /admin/staff/remove/{employee_id}:
    delete:
      operationId: "admin_functions.remove"
      tags:
        - Staff
      summary: "Delete a employee"
      parameters:
        - $ref: "#/components/parameters/staff_id"
      responses:
        "204":
          description: "Successfully deleted employee"
  



